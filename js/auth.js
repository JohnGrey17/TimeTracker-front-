// üåê –ë–∞–∑–æ–≤–∞ –∞–¥—Ä–µ—Å–∞ API
const API_BASE_URL = 'http://localhost:8080/api';

// ‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ç–æ–∫–µ–Ω –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
window.addEventListener('DOMContentLoaded', () => {
  const token = localStorage.getItem('token') || sessionStorage.getItem('token');
  if (token) {
    alert('üîê –í–∏ –≤–∂–µ —É–≤—ñ–π—à–ª–∏');
    // üëâ –ó–∞ –ø–æ—Ç—Ä–µ–±–∏ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–π:
    // window.location.href = '/dashboard.html';
  }
});

// üîÅ –ü–æ–∫–∞–∑–∞—Ç–∏ —Ñ–æ—Ä–º—É –ª–æ–≥—ñ–Ω—É
function showLogin() {
  document.getElementById('menu').style.display = 'none';
  document.getElementById('registerForm').style.display = 'none';
  document.getElementById('loginForm').style.display = 'block';
}

// üîÅ –ü–æ–∫–∞–∑–∞—Ç–∏ —Ñ–æ—Ä–º—É —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
function showRegister() {
  document.getElementById('menu').style.display = 'none';
  document.getElementById('loginForm').style.display = 'none';
  document.getElementById('registerForm').style.display = 'block';
}

// üìù –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–∏—Ö —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
async function registerUser(event) {
  event.preventDefault();

  const email = document.getElementById('regEmail').value.trim();
  const password = document.getElementById('regPassword').value.trim();
  const repeatPassword = document.getElementById('regRepeatPassword').value.trim();
  const firstName = document.getElementById('regFirstName').value.trim();
  const lastName = document.getElementById('regLastName').value.trim();
  const phoneNumber = document.getElementById('regPhoneNumber').value.trim();
  const departmentName = document.getElementById('regDepartmentName').value;

  if (password !== repeatPassword) {
    alert('‚ùå –ü–∞—Ä–æ–ª—ñ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å');
    return;
  }

  const payload = {
    email,
    password,
    repeatPassword,
    firstName,
    lastName,
    phoneNumber,
    departmentName
  };

  try {
    const response = await fetch(`${API_BASE_URL}/auth/registration`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(payload)
    });

    const data = await response.json();

    if (response.ok) {
      alert("‚úÖ " + data.message);
      showLogin(); // –ø–µ—Ä–µ—Ö–æ–¥–∏–º–æ –¥–æ –ª–æ–≥—ñ–Ω—É
    } else {
      alert("‚ùå " + (data.message || "–ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó"));
    }
  } catch (error) {
    alert("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó: " + error.message);
  }
}

// üîê –õ–æ–≥—ñ–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
async function loginUser(event) {
  event.preventDefault();

  const email = document.getElementById('loginEmail').value.trim();
  const password = document.getElementById('loginPassword').value.trim();
  const rememberMe = document.getElementById('rememberMe').checked;

  try {
    const response = await fetch(`${API_BASE_URL}/auth/login`, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ email, password })
    });

    const data = await response.json();

   if (response.ok) {
     const storage = rememberMe ? localStorage : sessionStorage;
     storage.setItem('token', data.token); // üîê –ó–±–µ—Ä—ñ–≥–∞—î–º–æ —Ç–æ–∫–µ–Ω

     window.location.href = '../html/user/user_dashboard_ui.html'; // üëà –ü–µ—Ä–µ—Ö—ñ–¥ –¥–æ –∫–∞–±—ñ–Ω–µ—Ç—É
   }
    else {
      alert("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –ª–æ–≥—ñ–Ω –∞–±–æ –ø–∞—Ä–æ–ª—å");
    }
  } catch (error) {
    alert("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –ª–æ–≥—ñ–Ω—É: " + error.message);
  }
}
